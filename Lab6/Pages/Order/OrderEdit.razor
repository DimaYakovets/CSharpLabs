@using Lab6.Services
@using Lab6.Models
@using Model = Lab6.Models.Order

@page "/Order/Edit/{Id:int}"
@namespace Lab6.Pages
@inject IRepository<Model> _repo
@inject NavigationManager _nav

<h3>Edit</h3>

<hr />

@if (_model is null)
{
	<div>Loading ...</div>
}
else
{
	<div class="row">
		<div class="col-md-4">
			<EditForm Model="_model" OnValidSubmit="CreateModel">
				<div class="from-group mb-3">
					<lable for="firstname">Date</lable>
					<InputDate @bind-Value="_model.Date" class="form-control" id="firstname"></InputDate>
				</div>

				<div class="from-group mb-3">
					<lable for="street">Street</lable>
					<InputSelect @bind-Value="_model.Client" class="form-control" id="street"></InputSelect>
				</div>

				<button class="btn btn-success" type="submit">Save</button>
			</EditForm>
		</div>
	</div>
}

<hr />

<div>
	<a href="./@typeof(Model).Name/List" class="btn btn-info">Back to List</a>
</div>

@code {
	[Parameter]
	public int Id { get; set; }

	private Model _model;

	protected override async Task OnInitializedAsync()
	{
		_model = await _repo.GetAsync(Id);
	}

	private async Task CreateModel()
	{
		await _repo.UpdateAsync(Id, _model);

		_nav.NavigateTo($"./{typeof(Model).Name}/Details/{Id}");
	}
}
